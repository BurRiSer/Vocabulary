email: test1.2_3-random@gmail.com

phone: +375(29)321-54-76

    JavaScript – это язык прог_раммирования для Веб. Подавляющее большинство
веб-сайтов используют JavaScript,                   и все современные веб-броузеры – для настольных компьютеров, игровых приставок, электронных планшетов и смартфонов –
    включают интерпретатор JavaScript, что делает JavaScript самым широкоприменимым языком программирования из когда-либо существовавших в истории.
JavaScript входит в     тройку технологий, которые должен знать любой веб-разработчик: язык разметки HTML, позволяющий определять содержимое веб-страниц, язык стилей CSS, позволяющий определять внешний вид веб-страниц,
и язык программирования JavaScript, позволяющий определять поведение вебстраниц. Эта книга поможет вам овладеть языком программирования.
Если вы знаете другие языки программирования, вам может оказаться полезна
информация, что JavaScript является высокоуровневым, динамическим, нетипизированным и интерпретируемым языком программирования, который хорошо
подходит для программирования в объектно-ориентированном и функциональном стилях. Свой синтаксис JavaScript унаследовал из языка Java, свои первоклассные функции – из языка Scheme, а механизм наследования на основе прототипов – из языка Self. Но вам не требуется знать все эти языки или быть знакомыми с их терминологией для чтения этой книги и изучения JavaScript.
Название языка «JavaScript» может вводить в заблуждение. За исключением поверхностной синтаксической схожести, JavaScript полностью отличается от языка программирования Java. JavaScript давно перерос рамки языка сценариев,
превратившись в надежный и эффективный универсальный язык программирования. Последняя версия языка (смотрите врезку) определяет множество новых
особенностей, позволяющих использовать его для разработки крупномасштабного программного обеспечения.

sec2-1@mail.ru
+321(23)321-21-43

    JavaScript: названия и версии
JavaScript был создан в компании Netscape на заре зарождения Веб. Название «JavaScript» является торговой маркой, зарегистрированной компанией
Sun Microsystems (ныне Oracle), и используется для обозначения реализации языка, созданной компанией Netscape (ныне Mozilla). Компания Netscape представила язык для стандартизации европейской ассоциации производителей компьютеров ECMA (European Computer Manufacturer’s Association), но из-за юридических проблем с торговыми марками стандартизованная версия языка получила несколько неуклюжее название «ECMAScript».
Из-за тех же юридических проблем версия языка от компании Microsoft
получила официальное название «JScript». Однако на практике все эти
реализации обычно называют JavaScript. В этой книге мы будем использовать название «ECMAScript» только для ссылки на стандарт языка.
В течение прошлого десятилетия все веб-броузеры предоставляли реализацию версии 3 стандарта ECMAScript, и в действительности разработчикам
не было необходимости задумываться о номерах версий: стандарт языка
был стабилен, а его реализации в веб-броузерах в значительной мере были
совместимыми. Недавно вышла новая важная версия стандарта языка под
названием ECMAScript 5, и к моменту написания этих строк производители броузеров приступили к созданию его реализации. Эта книга охватывает все нововведения, появившиеся в ECMAScript 5, а также все особенности, предусмотренные стандартом ECMAScript 3. Иногда вам будут встречаться названия этих версий языка, сокращенные до ES3 и ES5, а также
название JavaScript, сокращенное до JS.
Когда речь заходит непосредственно о самом языке, при этом подразумеваются только версии 3 и 5 стандарта ECMAScript. (Четвертая версия стандарта ECMAScript разрабатывалась много лет, но из-за слишком амбициозных целей так и не была выпущена.) Однако иногда можно встретить упоминание о версии JavaScript, например: JavaScript 1.5 или JavaScript 1.8.
Эти номера версий присваивались реализациям JavaScript, выпускаемым
компанией Mozilla, причем версия 1.5 соответствует базовому стандарту
ECMAScript 3, а более высокие версии включают нестандартные расширения (подробнее об этом рассказывается в главе 11). Наконец, номера версий
также присваиваются отдельным интерпретаторам, или «механизмам» JavaScript. Например, компания Google разрабатывает свой интерпретатор
JavaScript под названием V8, и к моменту написания этих строк текущей
версией механизма V8 была версия 3.0.
Чтобы представлять хоть какой-то интерес, каждый язык программирования
должен иметь свою платформу, или стандартную библиотеку, или API функций
для выполнения таких базовых операций, как ввод и вывод. Ядро языка JavaScript определяет минимальный прикладной интерфейс для работы с текстом,
массивами, датами и регулярными выражениями, но в нем отсутствуют операции ввода-вывода. Ввод и вывод (а также более сложные возможности, такие как
сетевые взаимодействия, сохранение данных и работа с графикой) перекладываются на «окружающую среду», куда встраивается JavaScript. Обычно роль окружающей среды играет веб-броузер (однако в главе 12 мы увидим два примера использования JavaScript без привлечения веб-броузера). Первая часть этой книги
охватывает сам язык JavaScript и его минимальный прикладной интерфейс. Вторая часть описывает использование JavaScript в веб-броузерах и охватывает прикладной интерфейс, предоставляемый броузерами, который иногда называют
«клиентским JavaScript».
Третья часть книги представляет собой справочник по базовому API языка. Например, чтобы ознакомиться с прикладным интерфейсом JavaScript для работы
с массивами, вы можете отыскать и прочитать раздел «Array» в этой части книги. Четвертая часть – это справочник по клиентскому JavaScript. Например, чтобы ознакомиться с прикладным интерфейсом JavaScript для работы с графикой,
определяемым стандартом HTML5 для тега <canvas>, можно отыскать и прочитать раздел «Canvas» в четвертой части книги.
В этой книге мы сначала рассмотрим низкоуровневые основы, а затем перейдем
к базирущимся на них высокоуровневым абстракциям. Желательно читать главы, придерживаясь порядка, в котором они следуют в книге. Однако изучение нового языка программирования никогда не было линейным процессом, точно так
же и описание языка трудно представить в линейном виде: каждая особенность
языка тесно связана с другими особенностями, поэтому данная книга полна перекрестных ссылок – иногда назад, а иногда вперед – на сведения, с которыми вы
еще не ознакомились. Эта глава являет собой первый краткий обзор основ языка
и прикладного интерфейса клиентского JavaScript и представляет ключевые особенности, чем упрощает более глубокое их изучение в последующих главах.